controllers/
  STARTED authController.js
    COMPLETE  POST	/auth/register	Register a new user
    COMPLETE  POST	/auth/login	Log in and generate a JWT
    COMPLETE  POST	/auth/logout	Log out the user
    COMPLETE  POST	/auth/refresh-token	Refresh the JWT
    COMPLETE  POST	/auth/change-password	Change the current password
    COMPLETE  POST	/auth/verify-email	Verify the user's email using a token
    COMPLETE  POST	/auth/resend-verification-email	Resend the email verification token
    COMPLETE  POST	/auth/forgot-password	Initiate password reset
    COMPLETE  POST	/auth/reset-password	Reset the password using the token
    STARTED   POST	/auth/account-recovery	Helps users recover accounts without email access
    POSTPONE  POST  /auth/initiate-account-recovery	Starts the account recovery process
    POSTPONE  POST  /auth/verify-account-recovery	Verifys the account recovery process
    POSTPONE  POST	/auth/enable-2fa	Enable two-factor authentication
    POSTPONE  POST	/auth/verify-2fa	Verify the 2FA code during login
    POSTPONE  POST	/auth/disable-2fa	Disable two-factor authentication
    POSTPONE  POST  /auth/social-login

  userController.js
    COMPLETE  GET	/users/me	Get the logged-in user's profile
    COMPLETE  PUT	/users/me	Update the logged-in user's profile
    COMPLETE  DELETE	/users/me	Soft delete the user's account
    COMPLETE  GET	/users/me/tenants	Get all tenants associated with the logged-in user
    COMPLETE  POST	/users/me/tenants	Associate the logged-in user with a tenant
    COMPLETE  DELETE	/users/me/tenants/:tenantId	Remove the logged-in user's association with a tenant
    COMPLETE  GET	/users/me/preferences	Get the logged-in user's preferences
    COMPLETE  PUT	/users/me/preferences	Update the logged-in user's preferences
    COMPLETE  GET /users/me/notifications Get the notification settings
    COMPLETE  PUT	/users/me/notifications	Update notification settings
    POSTPONE  GET	/users/me/security-settings	Control security settings (e.g., session timeout)


  adminController.js
    COMPLETE  GET	/users	Get a list of all users (admin only)
    COMPLETE  GET	/users/search	Search users by criteria like name, email, or role
    COMPLETE  GET	/users/:id	Get details of a specific user
    COMPLETE  PUT	/users/:id	Update a user's profile
    COMPLETE  DELETE	/users/:id	Soft delete or permanently delete a user
    COMPLETE  GET	/users/:id/roles	Fetch roles for a user, scoped by tenant or globally
    COMPLETE  PUT	/users/:id/roles	Assign or update roles for a user
    POSTPONE  GET	/users/:id/audit-logs	Tracks changes for auditing or debugging purposes
    POSTPONE  GET	/users/:id/login-history	Admin view of a user's login history
    POSTPONE  GET	/users/analytics	Fetch aggregate data on users (e.g., active users)


  tenantController.js
    COMPLETE GET	/tenants/:tenantId/users	Fetch all users associated with a tenant-- belongs in the tenant microservice

  roleController.js
    POSTPONE  GET	/roles	Get a list of available roles
    POSTPONE  POST	/roles	Create a new role
    POSTPONE  PUT	/roles/:id	Update a role's permissions
    POSTPONE  DELETE	/roles/:id	Delete a role


  systemController.js
    GET	/users/me/connected-services	Shows users which third-party services their tenant(s) are connected to
    GET	/health	System health check   Shows uptime for connected third-party services their tenant(s) are connected to

